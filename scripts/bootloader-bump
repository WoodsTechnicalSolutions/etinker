#!/bin/bash
#

ET_DIR="`realpath -e $(dirname $0)/..`"

usage ()
{
	printf "\nusage: bootloader-bump <command>\n\n"
	printf "<command>\n"
	printf "\tmake <target> - Direct make target\n"
	printf "\tbuild         - Purge and Build\n"
	printf "\tinfo          - Show build variables for all boards\n"
	printf "\tupdate        - Clean and Build\n"
	printf "\tsoftware      - Update/Sync Git repos for all boards\n"
	printf "\tversion       - Show version information for all boards\n"
	printf "\t*config       - {g,menu,n,old}config\n\n"
}

do_make ()
{
	printf "\n[$1]\n"
	case $2 in
	make)
		ET_BOARD=$1 make bootloader-$3
		;;
	*config | info | software | update | version)
		ET_BOARD=$1 make bootloader-$2
		;;
	build)
		time ET_BOARD=$1 make bootloader-purge bootloader
		;;
	*)
		;;
	esac
}

is_virtual ()
{
	if [ "`grep -oe 'is virtual' ${ET_DIR}/boards/$1/etinker.mk 2> /dev/null`" = "is virtual" ]; then
		return 0
	else
		return 1
	fi
}

# verify first positional argument
if [ -z "$1" ]; then
	printf "Missing arguments!\n"
	usage
	exit 1
fi

# validate first positional argument
case $1 in
make)
	if [ -z "$2" ]; then
		printf "Missing 'make' arguments!\n"
		usage
		exit 1
	fi
	;;
*config | build | info | software | update | version)
	;;
*)
	printf "Invalid argument list!\n"
	usage
	exit 1
	;;
esac

# check state of boards directory
for n in `ls ${ET_DIR}/boards`; do
	if ! [ -f ${ET_DIR}/boards/$n/etinker.mk ]; then
		printf "'$n' is not a valid etinker board!\n" $n
		exit 1
	fi
done

# operate on valid Linux boards
for n in `ls ${ET_DIR}/boards`; do
	if is_virtual $n; then
		continue
	fi

	# boards with a supported bootloader build
	case $n in
	am335x-pocketbeagle | am3517-evm | aml-s905x-cc | ls1012afrdm | \
	ls1043ardb | omap3-* | pynq-z2 | sama5d3-xpld | k3-j721e-sk)
		if [ "pynq-z2" == "$n" ]; then
			# Xilinx board requires a generated FPGA project
			if ! [ -d ${ET_DIR}/boards/zynq/fpga/sdk ]; then
				continue
			fi
		fi
		if ! do_make $n "$@"; then
			printf "etinker $0 failed!\n"
			exit 1
		fi
		if [ "pynq-z2" == "$n" ]; then
			# build the Xilinx variant
			export ET_BOOTLOADER_VARIANT="-xlnx"
			if ! do_make $n "$@"; then
				printf "etinker $0 failed!\n"
				exit 1
			fi
			unset ET_BOOTLOADER_VARIANT
		fi
		;;
	*)
		;;
	esac
done
